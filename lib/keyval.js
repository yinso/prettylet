// Generated by CoffeeScript 1.8.0
(function() {
  var KeyValTab, Tab,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Tab = require('./tab');

  KeyValTab = (function(_super) {
    __extends(KeyValTab, _super);

    function KeyValTab(key, val, delim) {
      this.key = key;
      this.val = val;
      this.delim = delim != null ? delim : '=';
    }

    KeyValTab.prototype.depth = function() {
      if (this.val instanceof Tab) {
        return this.val.depth();
      } else {
        return 1;
      }
    };

    KeyValTab.prototype._getKey = function() {
      return this.key;
    };

    KeyValTab.prototype._oneLine = function(buffer, level) {
      this._oneLineKey(buffer, level);
      this._oneLineDelim(buffer, level);
      return this.val.oneLine(buffer, level);
    };

    KeyValTab.prototype._oneLineKey = function(buffer, level) {
      return buffer.pushOneLine(this._getKey());
    };

    KeyValTab.prototype._oneLineDelim = function(buffer, level) {
      return buffer.pushOneLine(this.delim);
    };

    KeyValTab.prototype.multiLine = function(buffer, level) {
      this._multiLineKey(buffer, level);
      this._multiLineDelim(buffer, level);
      return this.val.multiLine(buffer, level);
    };

    KeyValTab.prototype._multiLineKey = function(buffer, level) {
      return buffer.push(this._getKey());
    };

    KeyValTab.prototype._multiLineDelim = function(buffer, level) {
      return buffer.push(this.delim);
    };

    return KeyValTab;

  })(Tab);

  module.exports = KeyValTab;

}).call(this);
