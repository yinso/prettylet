// Generated by CoffeeScript 1.8.0
(function() {
  var LiteralTab, Tab,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Tab = require('./tab');

  LiteralTab = (function(_super) {
    __extends(LiteralTab, _super);

    function LiteralTab(inner, transform) {
      this.inner = inner;
      this.transform = transform != null ? transform : function(v) {
        return v;
      };
      if (typeof this.inner === 'object' && this.inner !== null) {
        throw new Error("Literal_cannot_hold_objects: " + this.inner);
      }
    }

    LiteralTab.prototype.oneLine = function(buffer, level) {
      return buffer.pushOneLine(this.convert());
    };

    LiteralTab.prototype.multiLine = function(buffer, level) {
      return buffer.push(this.convert());
    };

    LiteralTab.prototype.convert = function() {
      var val;
      val = (function() {
        switch (typeof this.inner) {
          case 'undefined':
            return 'undefined';
          default:
            if (this.inner === null) {
              return 'null';
            } else {
              return this.inner.toString();
            }
        }
      }).call(this);
      return this.transform(val);
    };

    return LiteralTab;

  })(Tab);

  module.exports = LiteralTab;

}).call(this);
